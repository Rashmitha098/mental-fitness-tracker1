import numpy as np
import pandas as pd
from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor
from sklearn.preprocessing import LabelEncoder

# Load the pre-trained model
df1 = pd.read_csv("prevalence-by-mental-and-substance-use-disorder _AI.csv")
df2 = pd.read_csv("mental-and-substance-use-as-share-of-disease -AI.csv")
data = pd.merge(df1, df2)
data.drop("Code", axis=1, inplace=True)
data.set_axis(
    [
        "Country",
        "Year",
        "Schizophrenia",
        "Bipolar_disorder",
        "Eating_disorder",
        "Anxiety",
        "drug_usage",
        "depression",
        "alcohol",
        "mental_fitness",
    ],
    axis="columns",
    inplace=True,
)
df = data

# Encode categorical columns
categorical_columns = ["Country"]
l = LabelEncoder()
for col in categorical_columns:
    df[col] = l.fit_transform(df[col])

# Split the data into features and target
x = df.drop("mental_fitness", axis=1)
y = df["mental_fitness"]

# Train the model
lr = LinearRegression()
rf = RandomForestRegressor()
lr.fit(x, y)
rf.fit(x, y)

# Function to predict mental fitness using the Linear Regression model
def predict_mental_fitness_lr(
    country,
    year,
    schizophrenia,
    bipolar_disorder,
    eating_disorder,
    anxiety,
    drug_usage,
    depression,
    alcohol,
):
    input_data = np.array(
        [
            country,
            year,
            schizophrenia,
            bipolar_disorder,
            eating_disorder,
            anxiety,
            drug_usage,
            depression,
            alcohol,
        ]
    ).reshape(1, -1)
    input_data = input_data.astype(float)  # Explicitly convert to numeric
    return lr.predict(input_data)[0]


# Function to predict mental fitness using the Random Forest model
def predict_mental_fitness_rf(
    country,
    year,
    schizophrenia,
    bipolar_disorder,
    eating_disorder,
    anxiety,
    drug_usage,
    depression,
    alcohol,
):
    input_data = np.array(
        [
            country,
            year,
            schizophrenia,
            bipolar_disorder,
            eating_disorder,
            anxiety,
            drug_usage,
            depression,
            alcohol,
        ]
    ).reshape(1, -1)
    input_data = input_data.astype(float)  # Explicitly convert to numeric
    return rf.predict(input_data)[0]


# Example usage
country = 0  # Assuming 'Country1' is the first country in the encoded list
year = 2023
schizophrenia = 5
bipolar_disorder = 3
eating_disorder = 2
anxiety = 4
drug_usage = 3
depression = 5
alcohol = 4

predicted_mental_fitness_lr = predict_mental_fitness_lr(
    country,
    year,
    schizophrenia,
    bipolar_disorder,
    eating_disorder,
    anxiety,
    drug_usage,
    depression,
    alcohol,
)
predicted_mental_fitness_rf = predict_mental_fitness_rf(
    country,
    year,
    schizophrenia,
    bipolar_disorder,
    eating_disorder,
    anxiety,
    drug_usage,
    depression,
    alcohol,
)

print(
    "Predicted Mental Fitness using Linear Regression: {:.2f}".format(
        predicted_mental_fitness_lr
    )
)
print(
    "Predicted Mental Fitness using Random Forest: {:.2f}".format(
        predicted_mental_fitness_rf
    )
)